{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/damienparret/Documents/Workspace/simple-race-timer/src/app/utils.tsx"],"sourcesContent":["const padZero = (value?: number) => {\n  if (value === undefined)\n    return \"00\"\n  if (value < 10)\n    return `0${value}`\n  return value.toString()\n}\n\nexport const formatClock = (hours?: number, minutes?: number, seconds?: number) => `${padZero(hours)}:${padZero(minutes)}:${padZero(seconds)}`\nexport const formatTimer = (hours?: number, minutes?: number, seconds?: number) => `${(hours === undefined || hours === 0) ? \"\" : hours + \":\"}${padZero(minutes)}:${padZero(seconds)}`\n\n\nexport interface place {\n    position: number,\n    raceNumber: number,\n    time: string\n  }\n\nexport const isRaceFieldValid = (raceField: HTMLFormElement, places: place[]) => {\n  // Check for invalid race numbers\n  if (raceField.value < 1) {\n    alert(\"Race number not valid!\")\n    return false\n  }\n  if (places.map((p) => p.raceNumber).includes(raceField.value)) {\n    alert(\"Race number was saved already!\")\n    return false\n  }  \n  // Otherwise it's valid.\n  return true;\n}"],"names":[],"mappings":";;;;;AAAA,MAAM,UAAU,CAAC;IACf,IAAI,UAAU,WACZ,OAAO;IACT,IAAI,QAAQ,IACV,OAAO,CAAC,CAAC,EAAE,OAAO;IACpB,OAAO,MAAM,QAAQ;AACvB;AAEO,MAAM,cAAc,CAAC,OAAgB,SAAkB,UAAqB,GAAG,QAAQ,OAAO,CAAC,EAAE,QAAQ,SAAS,CAAC,EAAE,QAAQ,UAAU;AACvI,MAAM,cAAc,CAAC,OAAgB,SAAkB,UAAqB,GAAG,AAAC,UAAU,aAAa,UAAU,IAAK,KAAK,QAAQ,MAAM,QAAQ,SAAS,CAAC,EAAE,QAAQ,UAAU;AAS/K,MAAM,mBAAmB,CAAC,WAA4B;IAC3D,iCAAiC;IACjC,IAAI,UAAU,KAAK,GAAG,GAAG;QACvB,MAAM;QACN,OAAO;IACT;IACA,IAAI,OAAO,GAAG,CAAC,CAAC,IAAM,EAAE,UAAU,EAAE,QAAQ,CAAC,UAAU,KAAK,GAAG;QAC7D,MAAM;QACN,OAAO;IACT;IACA,wBAAwB;IACxB,OAAO;AACT"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///Users/damienparret/Documents/Workspace/simple-race-timer/src/app/page.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useEffect, useState }  from 'react';\nimport { intervalToDuration, startOfToday } from \"date-fns\";\nimport { CSVLink } from \"react-csv\";\nimport { formatClock, formatTimer, isRaceFieldValid, place } from './utils';\n\nconst DEFAULT_TIME = \"00:00:00\"\nconst DEFAULT_ELAPSED_TIME = \"00:00\"\n\nexport default function Timer() {\n  // States\n  const [clock, setClock] = useState(DEFAULT_TIME);\n  const [elapsedTime, setElapsedTime] = useState(DEFAULT_ELAPSED_TIME);\n  const [startTime, setStartTime] = useState<number>(localStorage.startTime ? Number(localStorage.startTime) : 0);\n  const [places, setPlaces] = useState<place[]>(localStorage.places ? JSON.parse(localStorage.places) : [])\n\n  // Get executed at the specified interval. Compute and set the time values.\n  useEffect(() => {\n    const timer = setInterval(() => {\n      // Set the clock time\n      const timeToNow = intervalToDuration({start: startOfToday(), end: Date.now()});\n      setClock(formatClock(timeToNow.hours, timeToNow.minutes, timeToNow.seconds));\n    \n      // Compute and set the elasped time\n      if (startTime > 0) {\n        const stopwatch = intervalToDuration({start: Number(startTime), end: Date.now()});\n        setElapsedTime(formatTimer(stopwatch.hours, stopwatch.minutes, stopwatch.seconds));\n      }\n    }, 100);\n    return () => {\n      clearInterval(timer); // Return a funtion to clear the timer so that it will stop being called on unmount\n    }\n  }, [startTime]);\n  \n  // To start the stopwatch.\n  const start = () => {\n    const now = Date.now();\n    localStorage.startTime = now.toString();\n    setStartTime(now);\n  }\n\n  // To reset the stopwatch.\n  const reset = () => {\n    if (confirm(\"Clear all results and reset timer?\")) {\n      localStorage.removeItem(\"startTime\");\n      setStartTime(0);\n      setElapsedTime(DEFAULT_ELAPSED_TIME);\n      localStorage.removeItem(\"places\");\n      setPlaces([]);\n    }\n  }\n\n  // To record a new number and its time\n  const recordNumber = (raceField: HTMLFormElement) => {\n    const updatedPlaces = [...places, {position: places.length + 1, raceNumber: raceField.value, time: elapsedTime}]\n    // Save the places in local storage\n    localStorage.places = JSON.stringify(updatedPlaces);\n    setPlaces(updatedPlaces);\n  }\n\n  const saveRaceNumber = () => {\n    const raceField = document.getElementById('number') as HTMLFormElement;\n    if (isRaceFieldValid(raceField, places)) recordNumber(raceField);\n    raceField.value = \"\"\n  }\n  \n  return (\n    <div className=\"grid grid-rows-[20px_1fr_20px] justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20 font-[family-name:var(--font-geist-sans)]\">\n      <main className=\"flex flex-col gap-8 row-start-2 items-center\">\n\n        {/* Clock and Timer */}\n        <div className=\"flex flex-col gap-2 items-center\">\n          <div className='text-xl text-neutral-500 font-mono'>\n            {clock}\n          </div>\n          <div className='text-3xl font-mono'>\n            {elapsedTime}\n          </div>\n        </div>\n        \n        <div className=\"flex flex-col gap-4 items-center\">\n          {/* Start and Reset buttons */}\n          <div className=\"flex flex-row gap-2\">\n            <button className=\"bg-green-600 disabled:bg-gray-400 hover:bg-green-700 text-white py-2 px-4 rounded-md\" onClick={() => start()} disabled={startTime !== 0}>\n              Start\n            </button>\n            <button className=\"bg-red-500 disabled:bg-gray-400 hover:bg-red-600 text-white py-2 px-4 rounded-md\" onClick={() => reset()} disabled={startTime === 0}>\n              Reset\n            </button>\n          </div>\n\n          {/* Recording of race numbers and times */}\n          <div className=\"flex flex-row gap-2\" >\n            <input \n              type=\"number\" \n              id=\"number\" \n              className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" \n              placeholder=\"The athlete's number\" \n            />\n            <button \n              type=\"button\" \n              className=\"bg-green-600 disabled:bg-gray-400 hover:bg-green-700 text-white py-2 px-4 rounded-md\" \n              disabled={startTime === 0} \n              onClick={() => saveRaceNumber()}\n            > \n              Record\n            </button>\n          </div>\n        </div>\n\n        {/* Display of position, race numbers and times */}\n        <div className=\"flex flex-col gap-8 items-center\">\n          <div className=\"flex flex-col gap-0\">\n            {places.map(({position, raceNumber, time}) =>\n            <div className=\"grid grid-cols-3 gap-2\" key={`parent-${raceNumber}`}>\n              <div className='text-l text-neutral-500 font-mono'>\n                {position}.\n              </div>\n              <div className='text-l font-mono'>\n                {raceNumber}\n              </div>\n              <div className='text-l font-mono'>\n                {time}\n              </div>\n            </div>\n            )}\n          </div>\n  \n          {/* Downloading of the results */}\n          {places.length > 0 &&\n            <CSVLink className=\"bg-blue-500 disabled:bg-gray-400 hover:bg-blue-600 text-white py-2 px-4 rounded-md\" filename=\"race_results.csv\" data={\n              [\n                [\"Postion\", \"Race Number\", \"Time\"],\n                ...places.map(({position, raceNumber, time}) => [position, raceNumber, time])\n              ]\n            }> \n              Download Results\n            </CSVLink>\n          }\n        </div>\n\n      </main>\n      <footer className=\"text-neutral-500 row-start-3 flex gap-6 flex-wrap items-center justify-center\">\n        Source code available in GitHub\n      </footer>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}